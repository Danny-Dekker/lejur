"""orgs accounts journals

Revision ID: fc93a8650764
Revises: 49e8ce010210
Create Date: 2025-10-23 18:30:22.687376

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fc93a8650764'
down_revision: Union[str, None] = '49e8ce010210'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orgs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=24), nullable=False),
    sa.Column('name', sa.String(length=160), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('is_postable', sa.Boolean(), nullable=False),
    sa.Column('core_type', sa.Enum('ASSET', 'LIABILITY', 'EQUITY', 'INCOME', 'EXPENSE', name='core_type'), nullable=False),
    sa.Column('normal_side', sa.Enum('DEBIT', 'CREDIT', name='normal_side'), nullable=False),
    sa.Column('is_contra', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['accounts.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('org_id', 'code', name='uq_account_org_code'),
    sa.UniqueConstraint('org_id', 'name', name='uq_account_org_name')
    )
    op.create_index(op.f('ix_accounts_org_id'), 'accounts', ['org_id'], unique=False)
    op.create_table('journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('memo', sa.String(length=240), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_journal_entries_org_date', 'journal_entries', ['org_id', 'date'], unique=False)
    op.create_index(op.f('ix_journal_entries_org_id'), 'journal_entries', ['org_id'], unique=False)
    op.create_table('org_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('org_id', 'user_id', name='uq_org_user_once')
    )
    op.create_index(op.f('ix_org_users_org_id'), 'org_users', ['org_id'], unique=False)
    op.create_index(op.f('ix_org_users_user_id'), 'org_users', ['user_id'], unique=False)
    op.create_table('journal_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('side', sa.Enum('DEBIT', 'CREDIT', name='line_side'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=18, scale=2), nullable=False),
    sa.Column('description', sa.String(length=240), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['entry_id'], ['journal_entries.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['org_id'], ['orgs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_lines_account_id'), 'journal_lines', ['account_id'], unique=False)
    op.create_index(op.f('ix_journal_lines_entry_id'), 'journal_lines', ['entry_id'], unique=False)
    op.create_index(op.f('ix_journal_lines_org_id'), 'journal_lines', ['org_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_journal_lines_org_id'), table_name='journal_lines')
    op.drop_index(op.f('ix_journal_lines_entry_id'), table_name='journal_lines')
    op.drop_index(op.f('ix_journal_lines_account_id'), table_name='journal_lines')
    op.drop_table('journal_lines')
    op.drop_index(op.f('ix_org_users_user_id'), table_name='org_users')
    op.drop_index(op.f('ix_org_users_org_id'), table_name='org_users')
    op.drop_table('org_users')
    op.drop_index(op.f('ix_journal_entries_org_id'), table_name='journal_entries')
    op.drop_index('ix_journal_entries_org_date', table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_accounts_org_id'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('orgs')
    # ### end Alembic commands ###
